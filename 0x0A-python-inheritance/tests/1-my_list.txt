========================
The ``1-my_list`` module
========================

Using ``MyList``
----------------------

Import function form its module
	>>> print_sorted = __import__("1-my_list").MyList.print_sorted

# Check the correctness of output
checking a list with random numbers
	>>> print_sorted([4, 2, 1, 5, 3])
	[1, 2, 3, 4, 5]

checking a sorted list (ascending order)
	>>> print_sorted([1, 2, 3, 4, 5])
	[1, 2, 3, 4, 5]

checking a sorted list (descending order)
	>>> print_sorted([5, 4, 3, 2, 1])
	[1, 2, 3, 4, 5]

checking a list contains same values
	>>> print_sorted([3, 3, 3, 3, 3])
	[3, 3, 3, 3, 3]

checking a list with negative numbers
	>>> print_sorted([-2, -1, -5, -3])
	[-5, -3, -2, -1]

checking a list with negative and positive numbers
	>>> print_sorted([-5, 4, -3, 2, -1])
	[-5, -3, -1, 2, 4]

checking a list contains zero
	>>> print_sorted([1, 0, 0, 3])
	[0, 0, 1, 3]

checking an empty list
	>>> print_sorted([])
	[]

# Check the correctness of exceptions

checking the non-valid number of arguments
	>>> print_sorted()
	Traceback (most recent call last):
		...
	TypeError: print_sorted() missing 1 required positional argument: 'self'

	>>> print_sorted([1, 2], [3, 1])
	Traceback (most recent call last):
		...
	TypeError: print_sorted() takes 1 positional argument but 2 were given

checking the non-valid type of arguments
	>>> print_sorted(None)
	Traceback (most recent call last):
		...
	TypeError: 'NoneType' object is not iterable

	>>> print_sorted(1)
	Traceback (most recent call last):
		...
	TypeError: 'int' object is not iterable
